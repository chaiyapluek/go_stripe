{{template "base" .}}

{{define "title"}}
    Virtual Terminal
{{end}}

{{define "content"}}
    <h2 class="mt-3 text-center">Virtual Terminal</h2>
    <hr>

    <div class="alert alert-danger text-center d-none" id="card-message"></div>

    <form action="/virtual-terminal-payment-succeeded" method="post" name="charge_form" id="charge_form" autocomplete="off" 
        class="d-block needs-validation charge-form" novalidate="">

        <div class="mb-3">
            <label for="charge_amount" class="form-label">Amount</label>
            <input type="text" class="form-control" id="charge_amount" required="" autocomplete="charge_amount-new">
        </div>

        <div class="mb-3">
            <label for="cardholder-name" class="form-label">Cardholder Name</label>
            <input type="text" class="form-control" id="cardholder-name" name="cardholder_name" required="" 
                autocomplete="cardholder-name-new">
        </div>

        <div class="mb-3">
            <label for="cardholder-email" class="form-label">Cardholder Email</label>
            <input type="email" class="form-control" id="cardholder-email" name="cardholder_email" required="" 
                autocomplete="cardholder-email-new">
        </div>

        <!-- Card number will be build by stripe -->
        <div class="mb-3">
            <label for="card-element" class="form-label">Credit Card</label>
            <div id="card-element" class="form-control"></div>
            <div class="alert-danger text-center" id="card-errors" role="alert"></div>
            <div class="alert-success text-center" id="card-success" role="alert"></div>
        </div>

        <hr>

        <a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val(event)">Charge Card</a>
        <div id="processing-payment" class="d-none text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>

        <input type="hidden" name="amount" id="amount">
        <input type="hidden" name="payment_intent" id="payment_intent">
        <input type="hidden" name="payment_method" id="payment_method">
        <input type="hidden" name="payment_amount" id="payment_amount">
        <input type="hidden" name="payment_currency" id="payment_currency">

    </form>

    <div class="row">
        <div class="col-md-6 offset-md-3 d-none" id="receipt">
            <h3 class="mt-3 text-center">Receipt</h3>
            <hr>
            <p>
                <strong>Bank Return Code</strong>:<span id="bank-return-code"></span>
            </p>
            <p>
                <a class="btn btn-primary" href="/admin/virtual-terminal">Charge another card</a>
            </p>
        </div>
    </div>
{{end}}

{{define "js"}}
<script>
checkAuth()
document.getElementById("charge_amount").addEventListener("change", function(event){
    if(event.target.value !== ""){
        document.getElementById("amount").value = parseInt((event.target.value * 100), 10)
    }else{
        document.getElementById("amount").value = 0
    }
})
</script>
<script src="https://js.stripe.com/v3"></script>

    <script>

    let card
    let stripe

    const cardMessage = document.getElementById("card-message")
    const payButton = document.getElementById("pay-button")
    const processing = document.getElementById("processing-payment")

    stripe = Stripe("{{.StripePublishableKey}}")

    function hidePaybutton(){
        payButton.classList.add("d-none")
        processing.classList.remove("d-none")
    }

    function showPayButton(){
        payButton.classList.remove("d-none")
        processing.classList.add("d-none")

    }

    function showCardError(msg){
        cardMessage.classList.add("alert-danger")
        cardMessage.classList.remove("alert-success")
        cardMessage.classList.remove("d-none")
        cardMessage.innerText = msg
    }

    function showCardSuccess(){
        cardMessage.classList.remove("alert-danger")
        cardMessage.classList.add("alert-success")
        cardMessage.classList.remove("d-none")
        cardMessage.innerText = "Transaction successful"
    }

    function val(event){
        let form = document.getElementById("charge_form")

        if(form.checkValidity() === false){
            event.preventDefault()
            event.stopPropagation()
            form.classList.add("was-validated")
            return ;
        }
        form.classList.add("was-validated")
        hidePaybutton()

        let amountToCharge = document.getElementById("amount").value

        const payload = {
            amount: amountToCharge,
            currency: "usd",
        }

        const requestOption = {
            method: "post",
            headers:{
                "Accept": "application/json",
                "Content-Type": "application/json",
            },
            body: JSON.stringify(payload)
        }

        fetch("{{.API}}/api/payment-intent", requestOption)
        .then(response => response.text())
        .then(response => {
            let data;
            try{
                data = JSON.parse(response)
                stripe.confirmCardPayment(data.client_secret, {
                    payment_method:{
                        card: card,
                        billing_details:{
                            name: document.getElementById("cardholder-name").value
                        }
                    },
                })
                .then(result => {
                    if(result.error){
                        // Card declined, or something went wrong with the card
                        showCardError(result.error.message)
                        showPayButton()
                    }else if(result.paymentIntent){
                        if(result.paymentIntent.status === "succeeded"){
                            // we have charged the card
                            // document.getElementById("payment_method").value = result.paymentIntent.payment_method
                            // document.getElementById("payment_intent").value = result.paymentIntent.id
                            // document.getElementById("payment_amount").value = result.paymentIntent.amount
                            // document.getElementById("payment_currency").value = result.paymentIntent.currency
                            processing.classList.add("d-none")
                            showCardSuccess()

                            //sumbit the form
                            //document.getElementById("charge_form").submit()
                            saveTransaction(result)
                        }
                    }
                })
            } catch(err) {
                showCardError("Invalid response from payment gateway!")
                showPayButton()
            }
        })
    }

    function saveTransaction(result){
        const payload = {
            amount: parseInt(document.getElementById("amount").value, 10),
            currency: result.paymentIntent.currency,
            first_name: "",
            last_name: "",
            email: document.getElementById("cardholder-email").value,
            payment_intent: result.paymentIntent.id,
            payment_method: result.paymentIntent.payment_method,
        }
    
        const token = localStorage.getItem("token")
        const requestOption = {
            method: "post",
            headers: {
                "Accept": "application/json",
                "Content-type": "application/json",
                "Authorization": "Bearer " + token,
            },
            body: JSON.stringify(payload)
        }

        fetch("{{.API}}/api/admin/virtual-terminal-payment-succeeded", requestOption)
        .then(response=>response.json())
        .then(data=>{
            console.log("Virtual terminal data:", data)
            processing.classList.add("d-none")
            showCardSuccess()
            document.getElementById("receipt").classList.remove("d-none")
            document.getElementById("bank-return-code").innerText = data.bank_return_code;
        })
        .catch(err=>{
            console.log("Virtual terminal error:", err)
        })
    }

    (function(){
        const elements = stripe.elements()
        const style = {
            base:{
                fontSize: "16px",
                lineHeight: "24px",
            },
        }

        // create card entry
        card = elements.create("card", {style: style, hidePostalCode: true})
        card.mount("#card-element")
    
        // check input error
        card.addEventListener("change", (event)=>{
            var displayError = document.getElementById("card-errors")
            if(event.error){
                displayError.classList.remove("d-none")
                displayError.textContent = event.error.message
            }else{
                displayError.classList.add("d-none")
                displayError.textContent = ""
            }
        })

    })()

    </script>
{{end}}